name: Go build
on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:
    branches:
      - main

permissions:
  checks: write
  contents: write
  packages: write

jobs:
  build:
    strategy:
      matrix:
        go-version: [ 1.22 ]
        os: [ ubuntu-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: '0'
          fetch-tags: 'true'

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          check-latest: true

      - name: Install Go tools
        run: go install gotest.tools/gotestsum@latest

      - name: Init go
        run: |
          go mod download
          go generate .

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6

      - id: govulncheck
        uses: golang/govulncheck-action@v1
        with:
          go-version-input: ${{ matrix.go-version }}
          go-package: ./...

      - name: Test
        run: gotestsum --format pkgname -- -race -shuffle=on -covermode=atomic ./...

      - name: Setup Syft
        run: curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin

      - name: Snapshot release
        uses: goreleaser/goreleaser-action@v6
        if: startsWith(github.ref, 'refs/tags/v') != true
        with:
          distribution: goreleaser
          version: latest
          args: release --clean --snapshot

      - name: Release
        uses: goreleaser/goreleaser-action@v6
        if: startsWith(github.ref, 'refs/tags/v') && contains(matrix.os, 'macos')
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TAP_PAT: ${{ secrets.GH_TAP_PAT }}
          AUR_KEY: ${{ secrets.AUR_SSH_KEY }}

      - name: Upload RPM packages
        if: startsWith(github.ref, 'refs/tags/v') && contains(matrix.os, 'macos')
        run: |
          for rpm in dist/*.rpm; do
            curl --user prskr:${{ secrets.UPLOAD_RPM_SECRET }} \
                --upload-file "${rpm}" \
                https://code.icb4dc0.de/api/packages/prskr/rpm/upload
          done

      - name: Upload DEB packages
        if: startsWith(github.ref, 'refs/tags/v') && contains(matrix.os, 'macos')
        run: |
          for deb in dist/*.deb; do
            curl --user prskr:${{ secrets.UPLOAD_DEB_SECRET }} \
                --upload-file "${deb}" \
                https://code.icb4dc0.de/api/packages/prskr/debian/pool/bookworm/main/upload
          done
